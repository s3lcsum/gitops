#!compose -f
# github.com/s3lcsum/gitops/stacks/traefik/compose.yaml

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    user: root
    networks:
      - default
      - metrics
      - proxy
    env_file:
      - /Portainer/traefik/traefik.env
    ports:
      - 80:80
      - 443:443
      - 9100:9100 # Prometheus metrics
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /Portainer/traefik/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - /Portainer/traefik/dynamic.yaml:/etc/traefik/dynamic.yaml:ro
      - traefik-letsencrypt:/letsencrypt
    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik-dashboard.entrypoints: websecure
      traefik.http.routers.traefik-dashboard.service: api@internal
    healthcheck:
      test: ["CMD", "traefik", "healthcheck"]
      interval: 30s
      timeout: 5s
      retries: 3

  # error-pages:
  #   image: ghcr.io/tarampampam/error-pages:3
  #   restart: unless-stopped
  #   container_name: error-pages
  #   networks:
  #     - proxy
  #   environment:
  #     TEMPLATE_NAME: "lost-in-space"
  #   labels:
  #     traefik.enable: true
  #     traefik.http.routers.error-pages-router.rule: "HostRegexp(`{host:.+}`)"
  #     traefik.http.routers.error-pages-router.priority: 10
  #     traefik.http.routers.error-pages-router.entrypoints: web,websecure
  #     traefik.http.routers.error-pages-router.middlewares: error-pages-middleware
  #     traefik.http.middlewares.error-pages-middleware.errors.status: 400-599
  #     traefik.http.middlewares.error-pages-middleware.errors.service: error-pages-service
  #     traefik.http.middlewares.error-pages-middleware.errors.query: /{status}.html
  #     traefik.http.services.error-pages-service.loadbalancer.server.port: 8080

networks:
  metrics:
    external: true
  proxy:
    external: true

volumes:
  traefik-letsencrypt:
