# Authentik Stack
# Identity provider and SSO
# Maintainer: Dominik Siejak

x-default: &default
  restart: unless-stopped
  networks:
    - authentik
    - metrics
    - proxy
  labels:
    com.centurylinklabs.watchtower.enable: false

x-healthchecks: &healthchecks
  start_period: 20s
  interval: 30s
  retries: 5
  timeout: 3s

x-authentik: &authentik
  <<: *default
  image: ghcr.io/goauthentik/server:2025.6.3
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /portainer/authentik/media:/media
    - /portainer/authentik/certs:/certs
    - /portainer/authentik/templates:/templates
  environment:
    AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
    AUTHENTIK_LOG_LEVEL: ${AUTHENTIK_LOG_LEVEL}
    AUTHENTIK_POSTGRESQL__HOST: ${AUTHENTIK_POSTGRESQL__HOST}
    AUTHENTIK_POSTGRESQL__PORT: ${AUTHENTIK_POSTGRESQL__PORT}
    AUTHENTIK_POSTGRESQL__USER: ${POSTGRES_USER}
    AUTHENTIK_POSTGRESQL__PASSWORD: ${POSTGRES_PASSWORD}
    AUTHENTIK_POSTGRESQL__NAME: ${POSTGRES_DB}
    AUTHENTIK_REDIS__HOST: ${AUTHENTIK_REDIS__HOST}
    AUTHENTIK_REDIS__PORT: ${AUTHENTIK_REDIS__PORT}
    AUTHENTIK_EMAIL__HOST: ${AUTHENTIK_EMAIL__HOST}
    AUTHENTIK_EMAIL__PORT: ${AUTHENTIK_EMAIL__PORT}
    AUTHENTIK_EMAIL__USERNAME: ${AUTHENTIK_EMAIL__USERNAME}
    AUTHENTIK_EMAIL__PASSWORD: ${AUTHENTIK_EMAIL__PASSWORD}
    AUTHENTIK_EMAIL__USE_TLS: ${AUTHENTIK_EMAIL__USE_TLS}
    AUTHENTIK_EMAIL__USE_SSL: ${AUTHENTIK_EMAIL__USE_SSL}
    AUTHENTIK_EMAIL__TIMEOUT: ${AUTHENTIK_EMAIL__TIMEOUT}
    AUTHENTIK_EMAIL__FROM: ${AUTHENTIK_EMAIL__FROM}
    AUTHENTIK_ERROR_REPORTING__ENABLED: ${AUTHENTIK_ERROR_REPORTING__ENABLED}
    AUTHENTIK_BOOTSTRAP_TOKEN: ${AUTHENTIK_BOOTSTRAP_TOKEN}
  depends_on:
    postgresql:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  server:
    <<: *authentik
    container_name: authentik
    command: server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authentik.rule=Host(`auth.wally.dominiksiejak.pl`)"
      - "traefik.http.routers.authentik.entrypoints=websecure"
      - "traefik.http.routers.authentik.tls.certresolver=letsencrypt"
      - "traefik.http.services.authentik.loadbalancer.server.port=9000"
    volumes:
      - /portainer/authentik/media:/media
      - /portainer/authentik/templates:/templates
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/-/health/live"]
      interval: 30s
      timeout: 5s
      retries: 3

  worker:
    <<: *authentik
    container_name: authentik-worker
    command: worker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/-/health/worker"]
      interval: 30s
      timeout: 5s
      retries: 3

  postgresql:
    <<: *default
    container_name: authentik-postgresql
    image: postgres:17-alpine
    healthcheck:
      <<: *healthchecks
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - database:/var/lib/postgresql/data

  redis:
    <<: *default
    container_name: authentik-redis
    image: redis:7-alpine
    command: --save 60 1 --loglevel warning
    healthcheck:
      <<: *healthchecks
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
    volumes:
      - redis:/data

networks:
  metrics:
    external: true
  proxy:
    external: true
  authentik:
    driver: bridge

volumes:
  database:
    driver: local
  redis:
    driver: local
