#!compose -f
# github.com/s3lcsum/gitops/stacks/mediabox/compose.yaml

x-service-defaults: &service-defaults
  restart: unless-stopped
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=Europe/Warsaw
  networks:
    - proxy
    - arr

x-vpn-defaults: &vpn-defaults
  <<: *service-defaults
  # networks: []
  # network_mode: container:gluetun
  # depends_on:
  #   gluetun:
  #     condition: service_healthy
  # labels:
  #   traefik.enable: "false"

services:
  # 🔒 VPN gateway (WireGuard via Mullvad)
  gluetun:
    <<: *service-defaults
    image: qmcgaw/gluetun
    container_name: gluetun
    devices:
      - /dev/net/tun:/dev/net/tun
    shm_size: "1gb"
    networks:
      - default
      - proxy
    cap_add:
      - NET_ADMIN
    env_file:
      - /opt/mediabox/gluetun.env
    volumes:
      - gluetun:/gluetun
    labels:
      traefik.enable: "true"
      traefik.http.routers.qbittorrent.rule: Host(`qbittorrent.lake.dominiksiejak.pl`)
      traefik.http.services.qbittorrent.loadbalancer.server.port: 8080

      traefik.http.routers.jackett.rule: Host(`jackett.lake.dominiksiejak.pl`)
      traefik.http.services.jackett.loadbalancer.server.port: 9117

      traefik.http.routers.prowlarr.rule: Host(`prowlarr.lake.dominiksiejak.pl`)
      traefik.http.services.prowlarr.loadbalancer.server.port: 9696

  # 🔍 Torrent indexer
  jackett:
    <<: *vpn-defaults
    container_name: jackett
    image: linuxserver/jackett
    volumes:
      - jackett_config:/config

  # 🔍 Unified indexer manager
  prowlarr:
    <<: *vpn-defaults
    container_name: prowlarr
    image: linuxserver/prowlarr
    volumes:
      - prowlarr_config:/config

  # 🔒 Torrent client (VPN-routed)
  qbittorrent:
    <<: *vpn-defaults
    container_name: qbittorrent
    image: linuxserver/qbittorrent
    volumes:
      - qbittorrent_config:/config
      - /media/NAS_Shared_Media/downloads:/downloads

  # 🎥 Movie automation
  radarr:
    <<: *service-defaults
    container_name: radarr
    image: linuxserver/radarr
    volumes:
      - radarr_config:/config
      - /media/NAS_Shared_Media/downloads:/downloads
      - /media/NAS_Shared_Media/movies:/movies
    labels:
      traefik.http.routers.radarr.entrypoints: websecure

  # 📺 TV series automation
  sonarr:
    <<: *service-defaults
    container_name: sonarr
    image: linuxserver/sonarr
    volumes:
      - sonarr_config:/config
      - /media/NAS_Shared_Media/downloads:/downloads
      - /media/NAS_Shared_Media/tv:/tv
    labels:
      traefik.enable: "true"

  # 🔄 Subtitle management
  bazarr:
    <<: *service-defaults
    container_name: bazarr
    image: linuxserver/bazarr
    volumes:
      - bazarr_config:/config
      - /media/NAS_Shared_Media/downloads:/downloads
      - /media/NAS_Shared_Media/tv:/tv
      - /media/NAS_Shared_Media/movies:/movies
    labels:
      traefik.enable: "true"

  # 📺 Media server
  jellyfin:
    <<: *service-defaults
    container_name: jellyfin
    image: linuxserver/jellyfin
    volumes:
      - jellyfin_config:/config
      - /media/NAS_Shared_Media/tv:/data/tv
      - /media/NAS_Shared_Media/movies:/data/movies
    labels:
      traefik.enable: "true"

  # 📥 Request manager
  jellyseerr:
    <<: *service-defaults
    container_name: jellyseerr
    image: fallenbagel/jellyseerr
    volumes:
      - jellyseerr_config:/app/config
    labels:
      traefik.enable: "true"

  # 🎵 Music automation
  lidarr:
    <<: *service-defaults
    container_name: lidarr
    image: linuxserver/lidarr
    volumes:
      - lidarr_config:/config
      - /media/NAS_Shared_Media/downloads:/downloads
      - /media/NAS_Shared_Media/music:/music
    labels:
      traefik.enable: "true"

  # ⚙️ Configuration management for *arr applications
  configarr:
    <<: *service-defaults
    container_name: configarr
    image: ghcr.io/raydak-labs/configarr:latest
    ports:
      - 8080:8080
    volumes:
      - configarr_data:/app/data
      - /run/podman/podman.sock:/var/run/docker.sock:ro
      - /opt/mediabox/configarr.yaml:/app/config/config.yml:ro
    env_file:
      - /opt/mediabox/configarr.env
    environment:
      CONFIGARR_LOG_LEVEL: "INFO"
      CONFIGARR_WATCH_INTERVAL: "300"
      CONFIGARR_BACKUP_ENABLED: "true"
      CONFIGARR_BACKUP_RETENTION: "7"

networks:
  arr:
    driver: bridge
  proxy:
    external: true

volumes:
  gluetun:
  jackett_config:
  qbittorrent_config:
  radarr_config:
  sonarr_config:
  bazarr_config:
  jellyfin_config:
  jellyseerr_config:
  lidarr_config:
  prowlarr_config:
  configarr_data:
