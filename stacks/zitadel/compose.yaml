# github.com/s3lcsum/gitops/stacks/zitadel/compose.yaml

services:
  zitadel:
    image: ghcr.io/zitadel/zitadel:latest
    container_name: zitadel
    user: "0"
    env_file:
      - /opt/zitadel/zitadel.env
    environment:
      # External domain configuration
      ZITADEL_EXTERNALDOMAIN: auth.lake.dominiksiejak.pl
      ZITADEL_EXTERNALPORT: 443
      ZITADEL_EXTERNALSECURE: true
      ZITADEL_TLS_ENABLED: false

      # By configuring a login client, the setup job creates a user of type machine with the role IAM_LOGIN_CLIENT.
      # It writes a PAT to the path specified in ZITADEL_FIRSTINSTANCE_LOGINCLIENTPATPATH.
      # The PAT is passed to the login container via the environment variable ZITADEL_SERVICE_USER_TOKEN_FILE.
      ZITADEL_FIRSTINSTANCE_LOGINCLIENTPATPATH: /opt/zitadel/login-client.pat
      ZITADEL_FIRSTINSTANCE_ORG_HUMAN_PASSWORDCHANGEREQUIRED: false
      ZITADEL_FIRSTINSTANCE_ORG_LOGINCLIENT_MACHINE_USERNAME: login-client
      ZITADEL_FIRSTINSTANCE_ORG_LOGINCLIENT_MACHINE_NAME: Automatically Initialized IAM_LOGIN_CLIENT
      ZITADEL_FIRSTINSTANCE_ORG_LOGINCLIENT_PAT_EXPIRATIONDATE: '2029-01-01T00:00:00Z'
      ZITADEL_DEFAULTINSTANCE_FEATURES_LOGINV2_BASEURI: https://auth.lake.dominiksiejak.pl/ui/v2/login
      ZITADEL_DEFAULTINSTANCE_FEATURES_LOGINV2_REQUIRED: true
      ZITADEL_OIDC_DEFAULTLOGINURLV2: https://auth.lake.dominiksiejak.pl/ui/v2/login/login?authRequest=
      ZITADEL_OIDC_DEFAULTLOGOUTURLV2: https://auth.lake.dominiksiejak.pl/ui/v2/login/logout?post_logout_redirect=
      ZITADEL_SAML_DEFAULTLOGINURLV2: https://auth.lake.dominiksiejak.pl/ui/v2/login/login?samlRequest=

      # By configuring a machine, the setup job creates a user of type machine with the role IAM_OWNER.
      # It writes a personal access token (PAT) to the path specified in ZITADEL_FIRSTINSTANCE_PATPATH.
      # The PAT can be used to provision resources with Terraform
      ZITADEL_FIRSTINSTANCE_PATPATH: /opt/zitadel/admin.pat
      ZITADEL_FIRSTINSTANCE_ORG_MACHINE_MACHINE_NAME: Automatically Initialized IAM_OWNER
      ZITADEL_FIRSTINSTANCE_ORG_MACHINE_MACHINE_USERNAME: admin
      ZITADEL_FIRSTINSTANCE_ORG_MACHINE_PAT_EXPIRATIONDATE: '2029-01-01T00:00:00Z'

      # Logging configuration
      #ZITADEL_LOG_LEVEL: debug
      #ZITADEL_LOGSTORE_ACCESS_STDOUT_ENABLED: true

    command: ["start-from-init", "--masterkeyFromEnv"]

    healthcheck:
      test: ["CMD", "/app/zitadel", "ready"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s

    volumes:
      - zitadel_data:/opt/zitadel

    networks:
      - proxy
      - zitadel
      - database

    labels:
      traefik.enable: "true"
      traefik.docker.network: proxy
      traefik.http.routers.zitadel.rule: Host(`auth.lake.dominiksiejak.pl`) && !PathPrefix(`/ui/v2/login`)
      traefik.http.services.zitadel.loadbalancer.server.port: 8080
      traefik.http.services.zitadel.loadbalancer.server.scheme: h2c
      traefik.http.services.zitadel.loadbalancer.passHostHeader: true
  login:
    image: ghcr.io/zitadel/zitadel-login:latest
    container_name: zitadel-login
    user: "0"
    environment:
      ZITADEL_API_URL: http://zitadel:8080
      ZITADEL_SERVICE_USER_TOKEN_FILE: /opt/zitadel/login-client.pat
      CUSTOM_REQUEST_HEADERS: Host:auth.lake.dominiksiejak.pl
      NEXT_PUBLIC_BASE_PATH: /ui/v2/login
    networks:
      - proxy
      - zitadel
    volumes:
      - zitadel_data:/opt/zitadel:ro
    depends_on:
      zitadel:
        condition: service_healthy
        restart: false
    labels:
      traefik.enable: "true"
      traefik.docker.network: proxy
      traefik.http.routers.login.rule: Host(`auth.lake.dominiksiejak.pl`) && PathPrefix(`/ui/v2/login`)
      traefik.http.services.login.loadbalancer.server.port: 3000
networks:
  database:
    external: true
  proxy:
    external: true
  zitadel:
    driver: bridge

volumes:
  zitadel_data:
