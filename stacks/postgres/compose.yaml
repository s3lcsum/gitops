#!compose -f
# github.com/s3lcsum/gitops/stacks/postgres/compose.yaml

services:
  postgres:
    image: postgres:17
    container_name: postgres
    restart: unless-stopped
    networks:
      - database
      - metrics
    env_file:
      - /opt/postgres/postgres.env
    volumes:
      - data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]

  postgres-init:
    image: postgres:17
    container_name: postgres-init
    restart: "no"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - database
    env_file:
      - /opt/postgres/postgres.env
    volumes:
      - /opt/postgres/init.sh:/docker-entrypoint-initdb.d/init.sh
    command: ["sh", "-c", "/docker-entrypoint-initdb.d/init.sh"]
    # TODO: Check if this file watches are even working
    develop:
      watch:
        - action: sync+restart
          path: /opt/postgres/init.sh
          target: /docker-entrypoint-initdb.d/init.sh

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: unless-stopped
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    networks:
      - database
      - proxy
    ports:
      - 8999:8080
    labels:
      traefik.enable: "true"
      # TODO: I guess traefk by default tries to use https, but we want http here!
      traefik.http.services.adminer.loadbalancer.server.url: "http://adminer:8080"

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    restart: unless-stopped
    env_file:
      - /opt/postgres/postgres.env
    networks:
      - database
      - metrics
    depends_on:
      postgres:
        condition: service_healthy

networks:
  database:
    external: true
  metrics:
    external: true
  proxy:
    external: true

volumes:
  data:
    driver: local
    driver_opts:
      type: none
      device: /var/lib/postgresql
      o: bind
