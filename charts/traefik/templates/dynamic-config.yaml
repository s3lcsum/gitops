apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-dynamic-config
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: traefik
    app.kubernetes.io/instance: {{ .Release.Name }}
data:
  dynamic.yaml: |
    http:
      # Middlewares
      middlewares:
        redirect-to-https:
          redirectScheme:
            scheme: https
            permanent: true

        secure-headers:
          headers:
            frameDeny: true
            browserXssFilter: true
            contentTypeNosniff: true
            stsSeconds: 31536000
            stsIncludeSubdomains: true
            stsPreload: true
            customFrameOptionsValue: "SAMEORIGIN"
            referrerPolicy: "strict-origin-when-cross-origin"
            permissionsPolicy: "geolocation=(), microphone=(), camera=()"
            forceSTSHeader: true

        rate-limit:
          rateLimit:
            average: 100
            burst: 50

      # Routers
      routers:
        {{- if .Values.staticRoutes.enabled }}
        # Static routes for infrastructure
        {{- range .Values.staticRoutes.routes }}
        {{ .name }}:
          rule: "Host(`{{ .host }}`)"
          entryPoints:
            - websecure
          service: {{ .name }}
          tls:
            certResolver: letsencrypt
        {{- end }}
        {{- end }}

        {{- if .Values.tailscale.enabled }}
        # Tailscale routes
        {{- range .Values.tailscale.services }}
        {{ .name }}:
          rule: "Host(`{{ .host }}.{{ $.Values.tailscale.domain }}`)"
          entryPoints:
            - tailscale
          service: {{ .name }}
          tls:
            certResolver: tailscale
        {{- end }}
        {{- end }}

      # Services
      services:
        {{- if .Values.staticRoutes.enabled }}
        # Static route services
        {{- range .Values.staticRoutes.routes }}
        {{ .name }}:
          loadBalancer:
            servers:
              - url: "{{ .service }}"
            passHostHeader: true
            {{- if .insecure }}
            serversTransport: insecure
            {{- end }}
        {{- end }}
        {{- end }}

        {{- if .Values.tailscale.enabled }}
        # Tailscale services
        {{- range .Values.tailscale.services }}
        {{ .name }}:
          loadBalancer:
            servers:
              {{- if .namespace }}
              - url: "http://{{ .service }}.{{ .namespace }}.svc.cluster.local:{{ .port }}"
              {{- else }}
              - url: "http://{{ .service }}.{{ $.Release.Namespace }}.svc.cluster.local:{{ .port }}"
              {{- end }}
            passHostHeader: true
        {{- end }}
        {{- end }}

      # Server transports
      serversTransports:
        insecure:
          insecureSkipVerify: true
      {{- end }}
