apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-agent-config
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: grafana-agent
    app.kubernetes.io/instance: {{ .Release.Name }}
data:
  config.river: |
    // Grafana Agent Flow configuration for Kubernetes monitoring

    {{- if .Values.grafanaCloud.prometheus.enabled }}
    // Prometheus metrics collection
    prometheus.remote_write "grafana_cloud" {
      endpoint {
        url = env("PROMETHEUS_URL")
        basic_auth {
          username = env("PROMETHEUS_USERNAME")
          password = env("PROMETHEUS_PASSWORD")
        }
      }
    }

    // Kubernetes API server metrics
    prometheus.scrape "kubernetes_apiservers" {
      targets = discovery.kubernetes.apiservers.targets
      forward_to = [prometheus.remote_write.grafana_cloud.receiver]
      job_name = "kubernetes-apiservers"
    }

    discovery.kubernetes "apiservers" {
      role = "endpoints"
      namespaces {
        names = ["default"]
      }
    }

    // Node metrics
    {{- if .Values.monitoring.node.enabled }}
    prometheus.scrape "kubernetes_nodes" {
      targets = discovery.kubernetes.nodes.targets
      forward_to = [prometheus.remote_write.grafana_cloud.receiver]
      job_name = "kubernetes-nodes"
    }

    discovery.kubernetes "nodes" {
      role = "node"
    }
    {{- end }}

    // Pod metrics
    {{- if .Values.monitoring.pods.enabled }}
    prometheus.scrape "kubernetes_pods" {
      targets = discovery.kubernetes.pods.targets
      forward_to = [prometheus.remote_write.grafana_cloud.receiver]
      job_name = "kubernetes-pods"
    }

    discovery.kubernetes "pods" {
      role = "pod"
    }
    {{- end }}

    // Service metrics
    {{- if .Values.monitoring.services.enabled }}
    prometheus.scrape "kubernetes_services" {
      targets = discovery.kubernetes.services.targets
      forward_to = [prometheus.remote_write.grafana_cloud.receiver]
      job_name = "kubernetes-services"
    }

    discovery.kubernetes "services" {
      role = "service"
    }
    {{- end }}

    // Traefik metrics
    {{- if .Values.monitoring.ingress.enabled }}
    prometheus.scrape "traefik" {
      targets = [
        {"__address__" = "traefik.traefik-system.svc.cluster.local:9100"},
      ]
      forward_to = [prometheus.remote_write.grafana_cloud.receiver]
      job_name = "traefik"
    }
    {{- end }}
    {{- end }}

    {{- if .Values.grafanaCloud.loki.enabled }}
    // Loki log collection
    loki.write "grafana_cloud" {
      endpoint {
        url = env("LOKI_URL")
        basic_auth {
          username = env("LOKI_USERNAME")
          password = env("LOKI_PASSWORD")
        }
      }
    }

    // Container logs
    {{- if .Values.logging.containers.enabled }}
    discovery.kubernetes "pods_logs" {
      role = "pod"
    }

    discovery.relabel "kubernetes_pods_logs" {
      targets = discovery.kubernetes.pods_logs.targets

      rule {
        source_labels = ["__meta_kubernetes_pod_node_name"]
        target_label = "__host__"
      }

      rule {
        source_labels = ["__meta_kubernetes_pod_name"]
        target_label = "pod"
      }

      rule {
        source_labels = ["__meta_kubernetes_namespace"]
        target_label = "namespace"
      }

      rule {
        source_labels = ["__meta_kubernetes_pod_container_name"]
        target_label = "container"
      }
    }

    loki.source.kubernetes "pods" {
      targets = discovery.relabel.kubernetes_pods_logs.output
      forward_to = [loki.write.grafana_cloud.receiver]
    }
    {{- end }}

    // System logs
    {{- if .Values.logging.system.enabled }}
    loki.source.file "system_logs" {
      targets = [
        {__path__ = "/var/log/syslog", job = "syslog"},
        {__path__ = "/var/log/kern.log", job = "kernel"},
      ]
      forward_to = [loki.write.grafana_cloud.receiver]
    }
    {{- end }}

    // Kubernetes events
    {{- if .Values.logging.events.enabled }}
    loki.source.kubernetes_events "cluster_events" {
      forward_to = [loki.write.grafana_cloud.receiver]
    }
    {{- end }}
    {{- end }}
